{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","index","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yMAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAErB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,gCACI,6BAAKJ,IACL,4BAAIC,WCaLI,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAOV,GAClBC,KAAMM,EAAOG,GAAOT,KACpBC,MAAOK,EAAOG,GAAOR,OAHhBQ,SCMlBC,EAdG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,8BAEI,uBACIV,UAAY,mCACZW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAWC,OAAQ,SAA1C,SACKH,EAAMI,YCiBJC,E,kDAnBX,WAAYL,GAAO,IAAD,8BACd,cAAMA,IACDM,MAAM,CACPC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAGG,KAAKJ,MAAMC,SACH,sDAEJG,KAAKV,MAAMI,a,GAhBEQ,aC4CbC,E,kDAvCX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKJ,SAAU,CAACjB,YAAaqB,EAAMC,OAAOC,SAZ1C,EAAKX,MAAQ,CACTjB,OAAQ,GACRK,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OACfwB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEtB,OAAQiC,S,oBAO/C,WAEI,MAAiCZ,KAAKJ,MAA9BjB,EAAR,EAAQA,OAASK,EAAjB,EAAiBA,YACX6B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASjC,EAAYgC,kBAEzD,OAAQrC,EAAOuC,OAEX,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,mCACA,cAAC,EAAD,CAAWU,aAAgBe,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQkC,WAPV,6C,GAxBdX,aCMHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,eAAe,SAMrCX,M","file":"static/js/main.1e71061e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({id, name, email}) => {\r\n    \r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?200x200`} alt='robots' />\r\n            <div>\r\n                <h1>{name}</h1>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, index) => {\r\n                    return (\r\n                        <Card \r\n                            key={index} \r\n                            id={robots[index].id} \r\n                            name={robots[index].name} \r\n                            email={robots[index].email}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n    return (\r\n        <div >\r\n            \r\n            <input\r\n                className = 'pa3 ba b--green bg-lightest-blue' \r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange={searchChange} \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow: 'scroll' , height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Error occurred here.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import React , { Component } from 'react'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState( {searchfield: event.target.value})\r\n    }\r\n    \r\n    render()\r\n    {\r\n        const { robots , searchfield } = this.state\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length ? <h1>Loading</h1> :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f1'>My Personal Robo Army</h1>\r\n                <SearchBox searchChange = {this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n    <App/> , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}